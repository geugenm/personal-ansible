---
# roles/win-apps/tasks/main.yml
# Windows software provisioning via Chocolatey

- name: Ensure Chocolatey is installed
  win_shell: |
    if (-not (Get-Command choco.exe -ErrorAction SilentlyContinue)) {
      Set-ExecutionPolicy Bypass -Scope Process -Force
      [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
      Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      Write-Output "CHOCO_INSTALLED"
    } else {
      Write-Output "CHOCO_ALREADY_PRESENT"
    }
  register: choco_install
  changed_when: choco_install.stdout.trim() == "CHOCO_INSTALLED"

- name: Define application groups
  set_fact:
    dev_tools:
      - git
      - python
      - lazygit
      - neovim
      - cmake
      - llvm
      - msys2
      - dotnet
      - vulkan-sdk
      - starship
      - nodejs
      - vscodium
      - visualstudio2022enterprise
      - openjdk
    system_utils:
      - 7zip.install
      - attributechanger
      - bulk-crap-uninstaller
      - simplewall.install
      - sysinternals
      - powertoys
      - memreduct
      - winaero-tweaker
      - wiztree
      - rapidee
      - everything
      - processhacker
      - cpu-z
      - hashtab
    network_tools:
      - nmap
      - wireshark
      - psiphon
    security_tools:
      - gpg4win
      - imhex
      - x64dbg.portable
      - ghidra
      - windows-sdk-10-version-2004-windbg
      - cheatengine
    media_apps:
      - vlc
      - mpv
      - obs-studio
      - sharex
    browser_apps:
      - chromium
      - yandex-browser
    unix_tools:
      - cygwin
      - clink
      - doublecmd
    productivity:
      - obsidian
      - okular
      - office-tool
      - notepadplusplus
      - geogebra
      - winmerge
      - syncthing
    communication:
      - discord
      - telegram
    misc:
      - steam-client
      - qbittorrent
      - virtualbox
      - microsoft-windows-terminal
      - nvidia-display-driver

- name: Install development tools
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ dev_tools }}"
  register: dev_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install system utilities
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ system_utils }}"
  register: sys_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install network tools
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ network_tools }}"
  register: net_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install security tools
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ security_tools }}"
  register: sec_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install media applications
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ media_apps }}"
  register: media_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install browser applications
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ browser_apps }}"
  register: browser_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install Unix-like tools
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ unix_tools }}"
  register: unix_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install productivity applications
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ productivity }}"
  register: prod_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install communication applications
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ communication }}"
  register: comm_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Install miscellaneous applications
  win_chocolatey:
    name: "{{ item }}"
    state: present
  loop: "{{ misc }}"
  register: misc_install
  ignore_errors: true
  loop_control:
    label: "{{ item }}"

- name: Collect package installation failures
  set_fact:
    failed_packages:
      "{{ (dev_install.results + sys_install.results + net_install.results +
      sec_install.results + media_install.results + browser_install.results +
      unix_install.results + prod_install.results + comm_install.results +
      misc_install.results) |
      selectattr('failed', 'equalto', true) |
      map(attribute='item') | list }}"

- name: Report installation failures
  debug:
    msg: "Failed to install the following packages: {{ failed_packages | join(', ') }}"
  when: failed_packages | length > 0

- name: Add Cygwin to PATH
  win_path:
    elements: C:\tools\cygwin\bin
    scope: user
  when: "'cygwin' in unix_install.results | map(attribute='item') | list"

- name: Upgrade all Chocolatey packages
  win_chocolatey:
    name: all
    state: latest
  register: choco_upgrade
